**Chosen Type:** Hybrid Diagram

**Circuit Concept Description:**
This is a concept for a simple, active Infrared (IR) Proximity Sensor. The circuit works by emitting a beam of IR light and detecting if that light is reflected by a nearby object. It's a hybrid diagram because it uses high-level blocks for distinct functional stages (like the emitter and amplifier) but shows the specific electronic components for the core decision-making part (the comparator). A simple hierarchical block is used to group the receiver sensor and its initial amplification stage.

**`schemdraw` Components List (Total: 9):**
*   `dsp.Box`: A block labeled "IR Emitter" to represent the infrared LED and its driving circuitry.
*   `flow.Box`: A parent block labeled "Receiver & Amplifier Stage" to demonstrate hierarchy.
*   `diode.Photodiode`: Placed *inside* the "Receiver & Amplifier Stage" block. This is the component that detects the reflected IR light.
*   `opamp.Opamp`: Placed *inside* the "Receiver & Amplifier Stage" block, configured as a transimpedance amplifier to convert the photodiode's current into a voltage.
*   `opamp.Opamp`: A second Opamp, used externally as a comparator to check if the amplified signal exceeds a set threshold.
*   `elm.Resistor`: Part of a voltage divider to set the reference voltage for the comparator.
*   `elm.Resistor`: The second resistor in the voltage divider pair.
*   `led.LED`: A standard visible LED used as an output indicator, which turns on when an object is detected.
*   `elm.Resistor`: A current-limiting resistor for the output LED.